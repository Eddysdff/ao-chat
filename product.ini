module tag：
Memory-limit 10
Compute-limit 1,000,000,00000
Data-Protocol ao
Type Module
App-Name AO-Chat
Content-Type application/wasm
Input-Encoding json
Output-Encoding json
Module-Format wasm32-unknown-emscripten
Contract-Src lua
SDK ao


[ao-chat]
src
-app
--chat
---page.tsx
--globals.css
--layout.tsx
--metadata.js
--page.tsx
-components
--chat
---chatwindow.tsx
---MessageBubble.tsx
--common
---notification.tsx
--contacts
---addcontactmodal.tsx
---contactslist.tsx
--video
---videocallmodal.tsx
--navbar.tsx
-config
--index.ts
-lib
--p2p
---connection-manager.ts
---connection-strategies.ts
---lipp2p-client.ts
--ao-process.ts
--arconnect.ts
--encryption.ts
--utils.ts
--webrtc.ts
-types
--ao.ts
--arconnect.d.ts
process
-chat.lua
-chatroom-template.lua
next.config.mjs
package.json
tailwind.config.ts



ao.send({
  Target = ao.id,
  Action = "Debug",
  Data = State.users
})


Send({
  Target = ao.id,
  Action = "AddUser",
  Data = {
    timestamp = os.time()
  }
})


Send({
  Target = ao.id,
  Action = "SendInvitation",
  Data = {
    to = "KQb9q5bR_VSSlk6XAvaT0gDELEJt8puMDgFNB74i9Xk",
  }
})

Send({
  Target = ao.id,
  Action = "GetPendingInvitations",
  Data = {
    timestamp = os.time()
  }
})

Send({
  Target = ao.id,
  Action = "AcceptInvitation",
  Data = {
    from = "KQb9q5bR_VSSlk6XAvaT0gDELEJt8puMDgFNB74i9Xk"
  }
})

ao.send({
  Target = ao.id,
  Action = "Debug",
  Data = State.invitations
})



Send({
  Target = ao.id,
  Action = "SendMessage",
  Data = {
    receiver = "KQb9q5bR_VSSlk6XAvaT0gDELEJt8puMDgFNB74i9Xk",
    content = "Hello, this is a test message",
    encrypted = false
  }
})

Send({
  Target = ao.id,
  Action = "GetMessages",
  Data = {
    otherAddress = "对方地址"
  }
})

ao.send({
  Target = ao.id,
  Action = "Debug",
  Data = State.messages
})

Send({
  Target = ao.id,
  Action = "GetContacts",
  Data = {
    timestamp = os.time()
  }
})


ao.send({
  Target = ao.id,
  Action = "Debug",
  Data = State.contacts
})
